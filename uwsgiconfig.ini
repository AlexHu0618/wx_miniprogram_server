[uwsgi]
http = 127.0.0.1:5000
#由于外部还要嵌套Nginx，这里可以使用socket进行通信，如果Nginx和uwsgi部署在同一台机器上，直接使用127.0.0.1
#如果外部直接通过uwsgi访问服务，需将socket改为http-socket或者http，将127.0.0.1改为0.0.0.0
chdir = %d
;chdir = /home/alex/PycharmProjects/wx_miniprogram_server/
#指定project目录为主目录
virtualenv = %(chdir)venv
#虚拟环境所在路径
wsgi-file = manage.py
#编写flask代码的py文件
callable = app
#Flask应用对象
;plugin = python3
master = true
#启动主进程，来管理其他进程
vacuum = true
#设置退出后清理文件
chmod-socket = 664
;stats = 0.0.0.0:9191
listen = 128
#socket监听队列大小，默认100，太小了一压测队列就满了，调大一点
processes = 2
threads = 4
#uwsgi启动的进程数，可设为机器核数+1
thunder-lock = true
#防止惊群
;harakiri = 60
#超时时间（秒），如果一个请求花费的时间超过了这个harakiri超时时间，那么这个请求都会被丢弃，并且当前处理这个请求的工作进程会被回收再利用（即重启）
;daemonize = %(chdir)logs/uwsgiserver.log
#进程会在后台运行，并输出日志
pidfile = %(chdir)uwsgi.pid
#进程会自动生成uwsgi.pid用于stop
enable-threads = true
#允许用内嵌的语言启动线程。这将允许你在app程序中产生一个子线程
touch-reload = %(chdir)manage.py
#指定文件更改后，uwsgi自动重载
cache2 = name=mycache,items=10
#打开uWSGI的缓存功能
